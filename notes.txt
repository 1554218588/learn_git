一.寄存器
1.偏移地址是指本寄存器相对于这个外设的基地址的偏移。先查找GPIOx（x为A-E）外
  设的基地址，则寄存器的地址=基地址+偏移地址。
2.位功能：BRy和BSy（y为0-15，0-15表示端口的引脚号）用于控制GPIOx的第y个引脚
	（1）BRy引脚的说明是0：不会对相应的ODRx位执行操作
	（2）BRy引脚的说明是1：对相应的ODRx位执行复位操作（复位是指将该位设置为0）
	（3）ODRx是另一个寄存器的寄存器位，ODRx位为1时，对应的引脚x输出高电平，ODRx
		 位为0时，对应的引脚x为低电平。所以结合（2）来看，对BR0写入1时，ODRx被复
		 位为0，GPIOx的第0位输出为“低电平”对BR0写入0时不会影响ODR0位，引脚电平不
		 会改变。
	（4）要想输出高电平，就需要对BS0位写入1，寄存器BSy与BRy是相反的操作。 
3.通过修改输出数据寄存器的值可以修改GPIO引脚的输出电平。
4.复用功能输出：（1）复用是指STM32的其他片上外设对GPIO引脚进行控制，
		1 // GPIOB 16 个 IO 全部输出 0XFF
		2 GPIOB->ODR = 0XFF;
5.输入数据寄存器；通过读取该寄存器就可以了解GPIO引脚的电平状态。
		1 // 读取 GPIOB 端口的 16 位数据值
		2 uint16_t temp;
		3 temp = GPIOB->IDR;
6.GPIO工作模式：
		1 typedef enum
		2 {
			3 GPIO_Mode_AIN = 0x0, // 模拟输入
			4 GPIO_Mode_IN_FLOATING = 0x04, // 浮空输入
			5 GPIO_Mode_IPD = 0x28, // 下拉输入
			6 GPIO_Mode_IPU = 0x48, // 上拉输入
			7 GPIO_Mode_Out_OD = 0x14, // 开漏输出
			8 GPIO_Mode_Out_PP = 0x10, // 推挽输出
			9 GPIO_Mode_AF_OD = 0x1C, // 复用开漏输出
			10 GPIO_Mode_AF_PP = 0x18 // 复用推挽输出
			11 } GPIOMode_TypeDef;
